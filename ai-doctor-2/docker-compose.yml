version: '3.8'

services:
  # PostgreSQL Database
  pgdb:
    image: postgres:16
    container_name: pgdb
    environment:
      POSTGRES_USER: admin_user   # Database username
      POSTGRES_PASSWORD: admin_password  # Database password
      POSTGRES_DB: ai_doctor_db  # Database name
    volumes:
      - pgdata:/var/lib/postgresql/data  # Persistent data storage
    networks:
      - ai-network
    ports:
      - "5432:5432"  # Expose PostgreSQL port for inter-container communication

  # Authentication Service (Handles JWT Authentication)
  auth:
    build:
      context: ./services/auth
    container_name: services-auth
    ports:
      - "8001:8001"  # Expose auth service port
    env_file:
      - ./services/auth/.env  # Environment variables for Auth service
    depends_on:
      - pgdb  # Ensure database is ready first
    environment:
      HOST: pgdb  # Database hostname
    networks:
      - ai-network

  # API Service (Handles CRUD for OPD, Card Room, Lab)
  api:
    build:
      context: ./services/api
    container_name: services-api
    ports:
      - "8002:8002"  # Expose API service port
    env_file:
      - ./services/api/.env  # Environment variables for API service
    depends_on:
      - pgdb  # Ensure database is ready
    environment:
      HOST: pgdb  # Database hostname
      AUTH_SVC_ADDRESS: services-auth:8001  # Auth service address
    networks:
      - ai-network

  # AI Service (Handles X-ray, MRI, and Symptom Analysis)
  ai:
    build:
      context: ./services/ai
    container_name: services-ai
    ports:
      - "8003:8003"  # Expose AI service port
    env_file:
      - ./services/ai/.env  # Environment variables for AI service
    depends_on:
      - pgdb  # Ensure database is ready
    environment:
      HOST: pgdb  # Database hostname
      AUTH_SVC_ADDRESS: services-auth:8001  # Auth service address
    networks:
      - ai-network

  # Real-time Notifications (Handles WebSocket Communication for UI updates)
  realtime:
    build:
      context: ./services/realtime
    container_name: services-realtime
    ports:
      - "8004:8004"  # Expose Real-time service port
    env_file:
      - ./services/realtime/.env  # Environment variables for Real-time service
    depends_on:
      - pgdb  # Ensure database is ready
    environment:
      AUTH_SVC_ADDRESS: services-auth:8001  # Auth service address
    networks:
      - ai-network

  # Frontend UI (React App for User Interface)
  frontend:
    build:
      context: ./frontend
    container_name: services-frontend
    ports:
      - "8005:8005"  # Expose Frontend UI port
    env_file:
      - ./frontend/.env  # Environment variables for frontend
    networks:
      - ai-network
    depends_on:
      - api  # API service should be ready
      - ai  # AI service should be ready
      - realtime  # Real-time service should be ready
      - auth  # Auth service should be ready

# Network Configuration (All services communicate over this network)
networks:
  ai-network:
    driver: bridge  # Use bridge network mode for inter-service communication

# Persistent Volume for Database Data
volumes:
  pgdata:
    external:
      name: ai_doctor_pgdata  # External volume to persist data
